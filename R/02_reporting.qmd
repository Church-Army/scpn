---
title: "Results Overview"
author: "Dave"
format:
  docx:
    fig-dpi: 600
editor: visual
echo: false
# knitr: 
#   opts_chunk: 
#     dev: "cairo_svg"
---

# Hello!

Welcome to this overview of SCPN quant data, which provides graphs and tabulations of most of the questions from our survey. If you're looking for totals and averages, check the table right at the bottom.

## Set up

### Libraries

```{r libraries}
library(fs)
library(here)
library(ggplot2)
library(dplyr)
library(carutools)
library(forcats)
library(scales)
library(stringr)
library(knitr)
library(lubridate)
library(tidyr)
library(purrr)
library(ggbeeswarm)
```

### Read data

```{r read_data}
scot <- readRDS(here("data", "output-01_cleaned-formatted.RDS"))
```

## Helpers

```{r helpers}
theme_ca <- theme_ca("cyan") + theme(axis.ticks = element_line())
theme_set(theme_ca)

update_geom_defaults("bar", aes(fill = ca_cyan(), colour = "black"))


percentify <- \(x, prec = 1) label_percent(prec)(prop.table(x))

add_percent <- function(x, col = n){
  col <- enexpr(col)
  
  mutate(x, `%` = percentify(!!col))
}

count_with_percent <- function(x, group){
  
  group = enexpr(group)
  
  group_by(x, !!group) |> 
    count() |> 
    ungroup() |> 
    arrange(-n, !!group) |> 
    add_percent()
  
}

factor_table <- function(col, x = scot){
  
  col <- enexpr(col)
  
  count_with_percent(x, !!col) |> 
    rename_with(str_to_title, 1)
}

church_plants <- \(x) rename(x, `Church plants` = n)
```

## Reporting

### Denomination

```{r denomination}
mutate(scot, denomination =
         ordered(denomination) |> 
         fct_infreq()) |>
  
  ggplot(aes(x = denomination)) +
  
  geom_bar() +
  
  ylab("Church plants") + 
  xlab("Denomination") +
  ggtitle("Denominations of responding church plants") +
  
  theme(panel.grid.major.x = element_blank(),
        axis.ticks.x = element_blank())

factor_table(denomination) |> 
  church_plants() |> 
  kable()
```

## Launch date

```{r launch_date}
scot <- mutate(scot, launch_date = make_date(start_year, start_month))

dates <- 
  group_by(scot, launch_date) |> 
  count() |> 
  ungroup() |> 
  arrange(launch_date) |> 
  mutate(n_plants = cumsum(n))

ggplot(dates, aes(x = launch_date, y = n_plants)) + 
  geom_rect(aes(ymin = 0,
                xmax = lead(launch_date,
                           default = max(launch_date) + period(4, "month")),
                xmin = launch_date,
                ymax = n_plants),
            fill = ca_cyan(),
            alpha = 0.7) + 
  
  geom_step(linewidth = 1, colour = ca_cyan()) +
  
  
  
  scale_y_continuous(
    name = "Church plants", 
    limits = c(0, NA),
    breaks = 0:5 * 2
  ) +
  scale_x_date(name = "Date") +
  ggtitle("Cumulative church plants over time")

group_by(scot, start_year) |> 
  count(name = "Churches planted") |> 
  ungroup() |> 
  arrange(start_year) |> 
  rename(`Launch year` = start_year) |> 
  complete(`Launch year` = full_seq(`Launch year`, 1), 
           fill = list(n = 0)) |> 
  kable()
```

### Attenders (current and at launch)

#### Summary table

Some measures of central tendency to begin with

```{r attenders}

attenders <- 
  scot |> 
  select(contains("attenders"), respondent_id) |>
  pivot_longer(-respondent_id,
               names_to = "stat") |> 
  separate_wider_regex(stat,
                       patterns = c(
                         time = "launch|current",
                         "_attenders_",
                         age  = "children|adult"
                         )) |> 
  pivot_wider(names_from = time, values_from = value) |> 
  unnest(everything())

attenders_summary <- 
  group_by(attenders, age) |> 
  select(-respondent_id) |> 
  summarise(
    across(everything(),
           .fn = list(
             mean   = \(x) mean(x, na.rm = TRUE),
             median = \(x) median(x, na.rm = TRUE),
             max    = \(x) max(x, na.rm = TRUE),
             min    = \(x) min(x, na.rm = TRUE)), 
           .names = "{.fn} ({.col})"
           )) |> 
  mutate(across(where(is.numeric), \(x) round(x, 2)))

attenders_summary <- attenders_summary[order(names(attenders_summary))]

kable(attenders_summary)
```

### Lollipop

```{r lollipop}
#| fig-width: 6

attenders <- mutate(attenders,
                    change = current - launch,
                    age = str_to_title(age) |> 
                      str_replace("Adult", "Adults"))

positions <- 
  summarise(attenders, change = sum(change, na.rm = TRUE), .by = respondent_id) |> 
  arrange(change) |> 
  mutate(pos = row_number()) |> 
  select(respondent_id, pos)

attenders <- left_join(attenders, positions, by = "respondent_id")

long_tenders <- pivot_longer(attenders, c(launch, current),
                             names_to = "time", values_to = "attenders")

ggplot(long_tenders, aes(x = factor(pos))) +
  
    
  geom_segment(mapping = aes(y = launch, yend = current),
               data = attenders,
               linewidth = 2,
               alpha = 0.2) +

  geom_point(data = long_tenders, aes(y = attenders, colour = time),
             size = 3) +
  
  scale_colour_manual(values = c(ca_cyan(), ca_purple()),
                      name = "Time point") +
  
  xlab("Churches") +
  ylab("Attenders") +
  
  theme(axis.ticks.x = element_blank(),
        panel.grid.major.x = element_blank(),
        axis.text.x = element_blank(),
        plot.background = element_rect(colour = "black", fill = NA)) +
  
  facet_wrap(~ age, dir = "h") +
  ggtitle("Attendance has not diminished anywhere",
          sub = "Either for adults or for children")
```

### Current attenders

```{r current_attenders}
attenders |> 
  mutate(age = str_to_title(age)) |> 
ggplot(aes(x = current)) +
  geom_histogram(fill = ca_cyan(),
                 binwidth = 10, boundary = 0) +
  scale_x_continuous(breaks = seq(0, 200, 20))+
  xlab("Attenders") +
  ylab("Church plants") + 
  facet_wrap(~ age, dir = "v") +
  ggtitle("Current attenders")


attenders |>
  summarise(attenders = sum(current), .by = respondent_id) |> 
  
  ggplot(aes(x = attenders)) +
  geom_histogram(fill = ca_cyan(), binwidth = 15, boundary = 0.9) +
  scale_x_continuous(name = "Attenders", breaks = seq(0, 200, 30),
                     limits = c(0, 200)) +
  ylab("Church plants") +
  ggtitle("Current attenders")

## total attenders:

sum(attenders$current)
sum(attenders$launch)
```

### Plant type

```{r plant_type}
scot |> 
  filter(!is.na(plant_type)) |> 
ggplot(aes(x = plant_type)) +
  geom_bar() +
  scale_x_discrete(name = "Church plant type", drop = FALSE,
                   guide = guide_axis(n.dodge = 2)) +
  ylab("Church plants") +
  ggtitle("Types of church plant") +
  scale_y_continuous(breaks = seq(0, 10, 2))

filter(scot, !is.na(plant_type)) |> 
count_with_percent(plant_type) |> 
  rename(`Plant type` = plant_type) |>
  church_plants() |> 
  kable()
  
```

## Geography

```{r geography}
not_na <- \(x) !is.na(x)

geog_responders <- 
  filter(scot, if_any(starts_with("geography_"), not_na)) |> 
  nrow()


geogs <- 
  scot |> 
  pivot_longer(starts_with("geography_") & !ends_with("_other"),
               names_prefix = "geography_",
               names_to = "geography", values_to = "is") |>
  summarise(plants = sum(is), .by = geography)

geog_table <-
  geogs |>
  arrange(-plants) |> 
  mutate(`% responding plants` = label_percent(1)(plants / geog_responders)) |> 
  mutate(geography =
           str_to_title(geography) |> 
           str_replace_all("_", " ") |> 
           ordered() |> 
           fct_inorder()) 


geog_table |> 
  filter(plants > 0) |> 
  rename(`Church plants` = plants) |> 
  kable()

geog_table |> 
  filter(plants > 0) |> 
  ggplot(aes(x = geography, y = plants)) +
  geom_col() +
  scale_x_discrete(name = "Geographical area") +
  ggtitle("Geographical areas into which churches planted",
         sub = "(Non-exclusive categories)") +
  ylab("Church plants") +
  scale_y_continuous(
    sec.axis = sec_axis(
      transform = \(x) x/geog_responders,
      labels = label_percent(),
      breaks = seq(1, 7, 2)/geog_responders))
```

### Traditions

```{r traditions}
trad_responders <- 
  filter(scot, if_any(starts_with("tradition_"), not_na)) |> 
  nrow()

trads <- 
  scot |> 
  pivot_longer(starts_with("tradition_") & !ends_with("_other"),
               names_prefix = "tradition_",
               names_to = "tradition", values_to = "is") |>
  summarise(plants = sum(is), .by = tradition)

trad_table <-
  trads|>
  arrange(-plants) |> 
  mutate(`% responding plants` = label_percent(1)(plants / trad_responders)) |> 
  mutate(tradition =
           str_to_title(tradition) |> 
           str_replace_all("_", " ") |> 
           ordered() |> 
           fct_inorder())

trad_table |>
  rename(`Church plants` = plants) |>
  kable()

trad_table |> 
  filter(plants > 0) |> 
  ggplot(aes(x = tradition, y = plants)) +
  geom_col() +
  scale_x_discrete(name = "Geographical area") +
  ggtitle("Traditions of church-planting teams",
         sub = "(Non-exclusive categories)") +
  ylab("Church plants") +
  scale_y_continuous(
    breaks = seq(0, 10, 2),
    sec.axis = sec_axis(transform = \(x) x/trad_responders,
                        labels = label_percent(),
                        breaks = seq(0, 10, 2)/trad_responders)
  )
```

### Location

```{r location}
filter(scot, !is.na(location)) |> 
  count_with_percent(location) |> 
  church_plants() |> 
  kable()

n_loc_r <- sum(!is.na(scot$location))

ggplot(scot, aes(x = location)) + 
  geom_bar() +
  ylab("Church plants") + 
  xlab("Location") +
  ggtitle("Meeting locations used by church plants") +
  scale_y_continuous(
    sec.axis = sec_axis(
      transform = \(x) x / n_loc_r,
      labels = label_percent(),
      breaks = seq(0, 20, 2) / n_loc_r
    )
  ) +
  scale_x_discrete(
    guide = guide_axis(n.dodge = 2)
  )
```

## FTE

#### Members of staff

```{r staff_members}
add <- function(x){
  x[is.na(x)] <- 0
  reduce(x, `+`)
}

employees <- 
  select(scot, respondent_id, starts_with(c("percent_fte", "staff_member"))) |> 
  mutate(across(-respondent_id, not_na)) |>
  pivot_longer(-respondent_id) |> 
  summarise(employees = sum(value), .by = respondent_id)

scot <- left_join(scot, employees, by = "respondent_id")

ggplot(scot, aes(x = employees)) + 
  geom_histogram(binwidth = 1) +
  
  scale_x_continuous("Paid members of staff", breaks = 0:6) +
  scale_y_continuous(
    sec.axis = sec_axis(
      transform = \(x) x/nrow(scot),
      labels = label_percent(),
      breaks = seq(0, 6, 2)/nrow(scot))) +
  
  ylab("Church plants") +
  ggtitle("Paid members of staff across all church plants") 

count_with_percent(scot, employees) |> 
  arrange(employees) |> 
  church_plants() |> 
  kable()
```

#### Full time equivalent hours worked

```{r fte_worked}
beeswarmify <- function(x, mult = 1){
  len <- length(x)
  pos <- 1:len
  
  (pos - mean(pos)) * mult
}

scot <-
  rowwise(scot) |> 
  mutate(fte = add(c_across(starts_with(c("percent_fte_", "staff_member_"))))) |>
  mutate(fte = fte/100) |> 
  ungroup()

scot$fte

foo <- 
ggplot(scot) +
  geom_density(aes(x = fte))

bar <- 
ggplot(scot) + 
  geom_point(aes(x = employees, y = fte), 
             alpha = 0.5, colour = ca_cyan(), size = 2) +
  geom_abline(intercept = 0, slope = 0.5, 
              linetype = "dashed")

scot |> 
  pivot_longer(starts_with(c("percent_fte_", "staff_member")),
               names_to = "remove", values_to = "employee_fte") |> 
  select(-remove) |> 
  mutate(respondent_id = ordered(respondent_id)) |> 
  filter(!is.na(employee_fte)) |> 
  mutate(employee_fte = employee_fte/100,
         respondent_id = fct_reorder(respondent_id, -employee_fte, sum)) |>
  mutate(y_pos = beeswarmify(employee_fte, mult = 0.75),
         .by = c(respondent_id, employee_fte)) |> 
  
  ggplot(aes(y = y_pos, x = employee_fte)) +
  
  geom_point(colour = ca_cyan(), size = 2, alpha = 0.9) +
  
  scale_y_discrete(drop = FALSE) +
  
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    panel.background = element_rect(fill = NA, colour = "gray90"),
    strip.text = element_blank(),
    panel.spacing.y = unit(.25, "lines"),
    plot.caption = element_text(colour = "gray30")
  ) +
  
  labs(y = "Churh plant",
       x = "Employees by FTE",
       caption = "Some FTE represent appx. % of split roles") + 
  
  facet_wrap(~respondent_id, dir = "v", ncol = 1, scales = "free_y",
            strip.position = "left", drop = FALSE) +
  ggtitle("Variation in Employees/FTE",
          sub = "Across all church plants")
```

## Mission focus

```{r plot_mission_focus}
mission_foci <- 
  scot |> 
  mutate(mission_focus_other = !is.na(mission_focus_other)) |> 
  filter(if_any(starts_with("mission_focus_"))) |>
  summarise(across(starts_with("mission_focus"),
                   list(prop = \(x) sum(x) / length(x),
                        count = \(x) sum(x)))) |> 
  pivot_longer(everything(),
               names_to = c("mission_focus", "stat"),
               names_pattern = "mission_focus_(.+)_(prop|count)") |>
  pivot_wider(names_from = stat) |> 
  mutate(mission_focus =
           ordered(mission_focus) |> 
           fct_reorder(-prop) |> 
           fct_relevel("None", after = Inf)) |> 
  arrange(-prop)

m_f_resp <- 
  scot |> 
  mutate(mission_focus_other = !is.na(mission_focus_other)) |> 
  filter(if_any(starts_with("mission_focus_"))) |> 
  nrow()

ggplot(mission_foci, aes(x = mission_focus, y = count)) + 
  geom_col() +
  
  scale_y_continuous(name = "Church plants",
                     breaks = seq(0,10,2),
                     sec.axis = sec_axis(
                       transform = \(x) x / m_f_resp,
                       labels = label_percent(),
                       breaks = seq(0,10, 2)/m_f_resp,
                       name = "% responding plants"
                     )) +
  
  scale_x_discrete(name = "Mission focus", labels = str_to_title) +
  ggtitle("Most plants had a geographical mission focus",
          sub = "")

scot |> 
  select(respondent_id, starts_with("mission_focus")) |> 
  select(-mission_focus_none) |> 
  mutate(mission_focus_other = !is.na(mission_focus_other)) |> 
  filter(if_any(starts_with("mission_focus_"))) |> 
  pivot_longer(-respondent_id, names_to = "focus", values_to = "is") |> 
  summarise(n_foci = sum(is), .by = respondent_id) |>
  summarise(n_plants = n(), .by = n_foci) |>
  complete(n_foci = full_seq(n_foci, 1), fill = list(n_plants = 0)) |> 
  add_percent(n_plants) |> 
  rename(`Missional "foci"` = `n_foci`,
         `Church plants` = `n_plants`) |> 
  kable()

filter(scot, !is.na(mission_focus_other)) |> 
  pull(mission_focus_other)
```

Most church plants only identified one missional focus.

## % Non/dechurched

```{r pc_non_de}
scot <- mutate(scot, pc_non_de = pc_nonchurched + pc_dechurched)

non_de_resp <- sum(!is.na(scot$pc_non_de))

ggplot(scot, aes(x = pc_non_de)) +
  geom_histogram(binwidth = 10, boundary = 0.25) +
  
  scale_x_continuous(name = "Non/de-churched attenders",
                     breaks = seq(0,100, 10), limits = c(0,100),
                     labels = \(x) str_c(x, "%")) +
  scale_y_continuous(name = "Church plants", 
                     sec.axis = sec_axis(transform = \(y) y/non_de_resp,
                                         labels = label_percent(1),
                                         breaks = 1:10/non_de_resp)) +
  ggtitle("% Non/de-churched attenders at each church plant") +
  
  theme(panel.grid.minor = element_blank()) 

baz <- 
ggplot(scot, aes(x = pc_nonchurched, y = pc_dechurched)) + 
  geom_point()

# scot |> 
#   select(-pc_non_de) |> 
#   pivot_longer(starts_with("pc_"),
#                names_to = "non_de",
#                values_to = "percent") |> 
#   ggplot(aes(x = percent)) +
#   geom_histogram(binwidth = 10, boundary = 0.9) +
#   
#   facet_wrap(~ non_de, dir = "v")

```

## Faith commitments

An overview of distribution for internal benefit

```{r faith_commitments}
n_resp_fc <- sum(!is.na(scot$total_faith_commitments))

ggplot(scot) + 
  geom_beeswarm(aes(y = total_faith_commitments, x = 1),
                size = 1, alpha = 0.6, colour = ca_cyan()) +
  scale_x_continuous(limits = c(0.9,1.5))
```

## Success in reaching non/dechurched

```{r success_reaching_non_de}

n_srn_resp <- sum(!is.na(scot$success_reaching_nondechurched))

filter(scot, !is.na(success_reaching_nondechurched)) |> 
ggplot(aes(x = success_reaching_nondechurched)) + 
  geom_bar() +
  scale_x_discrete(drop = FALSE, labels = \(x) str_replace(x, " ", "\n")) +
  scale_y_continuous(
    sec.axis = sec_axis(
      transform = \(x) x/n_srn_resp,
      labels = label_percent(1),
      breaks = 0:5/n_srn_resp
    )
  ) +
  labs(
    y = "Church plants",
    x = "Success in reaching non/de-churched people",
    title = "Most church plants are reaching non/de-churched people",
    subtitle = "(Success compared to anticipated success)"
  )

scot |> 
  filter(!is.na(success_reaching_nondechurched)) |> 
  count_with_percent(success_reaching_nondechurched) |> 
  rename(`Success in reaching non/de-churched` = 1,
         `Church plants` = n) |> 
  complete(`Success in reaching non/de-churched`,
          fill = list(`Church plants` = 0, `%` = "0%")) |> 
  kable()
```

### Difference services

```{r difference_services}
scot$how_different_from_sending_services
ggplot(scot, aes(x = how_different_from_sending_services)) + 
  geom_density(fill = ca_cyan(), col = ca_cyan(), 
               alpha = 0.5) +
  
  scale_x_continuous(lim = c(0,100)) +
  
  labs(
    y = "Density",
    x = "Difference from sending church service",
    title = "How different are services to sending church?",
    subtitle = "Density visualisation of scores from 0 - 100"
  ) +
  
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  )
```

## Extent to which church plants have had to develop new missional practises

```{r develop_practises}
n_prac_resp <- sum(!is.na(scot$extent_develop_new_missional_practices))

filter(scot, !is.na(extent_develop_new_missional_practices)) |> 
ggplot(aes(x = extent_develop_new_missional_practices)) +
  geom_bar() +
  
  scale_x_discrete(drop = FALSE) +
  scale_y_continuous(
    sec.axis = sec_axis(
      transform = \(x) x/n_prac_resp,
      labels = label_percent(),
      breaks = 0:3/n_prac_resp
    )
  ) +
  labs(
    title = "Extent to which new missional practises have been developed",
    y = "Church plants",
    x = "Extent"
  )

scot |> 
  filter(!is.na(extent_develop_new_missional_practices)) |> 
  count_with_percent(extent_develop_new_missional_practices) |> 
  complete(extent_develop_new_missional_practices,
           fill = list(n = 0, `%` = "0%")) |> 
  rename(
    "Extent of development of new missional practices" = 1,
    "Church plants" = 2
  ) |> 
  kable()
```

## Various freetext fields

### Flourish factors

```{r flourish_factors}
#| output: asis

bullets <- function(x){
  str_c("* ", x, collapse = "\n")
}

scot |> 
  pivot_longer(starts_with("flourish_")) |> 
  filter(!is.na(value)) |> 
  pull(value) |> 
  bullets()
```

### Inhibit factors

```{r inhibit_factors}
#| output: asis 
scot |> 
  pivot_longer(starts_with("inhibit_")) |> 
  filter(!is.na(value)) |> 
  pull(value) |> 
  bullets()
```

### How engage non/de churched

```{r how_enage_non_de}
scot |> 
  filter(!is.na(how_engage_nondechurched)) |> 
  select(how_engage_nondechurched) |> 
  kable()
```

## Measures of central tendency

```{r measures_central_tendency}
scot <- 
  mutate(scot, total_current_attenders =
           current_attenders_children + current_attenders_adult) |> 
  relocate(total_current_attenders, .after = current_attenders_children)

scot <- relocate(scot, employees, fte, .after = staff_member_8_fte)
scot <- relocate(scot, launch_date, .after = start_month)
scot <- relocate(scot, pc_non_de, .after = pc_dechurched)

scot <- select(scot, where(\(x) !all(is.na(x))))

scot |> 
  summarise(across(where(is.numeric),
            list(
              sum = \(x) sum(x, na.rm = TRUE),
              mean =   \(x) mean(x, na.rm = TRUE),
              median = \(x) median(x, na.rm = TRUE),
              max =    \(x) max(x, na.rm = TRUE),
              min =    \(x) min(x, na.rm = TRUE)),
            .names = "{.col}//{.fn}")) |> 
  pivot_longer(everything(), names_sep = "//",
               names_to = c("variable", "statistic")) |> 
  pivot_wider(names_from = "statistic") |> 
  mutate(across(where(is.numeric), \(x) round(x, 2))) |> 
  kable()
```
